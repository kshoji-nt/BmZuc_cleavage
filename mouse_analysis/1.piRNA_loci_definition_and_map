###############
#download data, trim adopters and extract the 24 nt sequence from the 5 'end and calculate the frequency of each sequence.
###############
NN="SRR7760309 SRR7760310 SRR7760317 SRR7760318 SRR7760321 SRR7760322 SRR7760343 SRR7760344 SRR7760347 SRR7760348 SRR7760369 SRR7760370 SRR7760373 SRR7760374 SRR7760377 SRR7760378"
for N in  ${NN}; do
        echo $N
prefetch -t http ${N}
fastq-dump ${N}.sra
cutadapt -a NNNTGGAATTCTCGGGTGCCAAGG --minimum-length 20 --maximum-length 70 -o ${N}_trim.fastq ${N}.fastq
fastq_to_fasta -i ${N}_trim.fastq -o ${N}_trim.fasta
cat ${N}_trim.fasta | awk 'NR%2==0' | awk '{print substr($0,1,24);}' | sort | uniq -c |sed -e "s/^ *//g" | sed -e "s/ /\t/g" > ${N}_trim_24bp.txt
done


################
#Put together sequences with high frequency of 24 nt sequences in any library
################
#this script is written in R
name0 <- ""
names <- c("SRR7760309","SRR7760310","SRR7760317","SRR7760318","SRR7760321","SRR7760322","SRR7760343","SRR7760344","SRR7760347","SRR7760348","SRR7760369","SRR7760370","SRR7760373","SRR7760374","SRR7760377","SRR7760378")
sleshhold <- 10 #Use only sequences with RPM larger than this value
header <- "Mus_ZM_piRNA"
out_f <- "mouse_ZM_piRNAlist.fas"

#Loading package
library(Biostrings)

#Loading data
reads <- list()
for(i in length(names)){
	reads[[i]] <- read.table(paste0(name0,names[i],"_trim_24bp.txt"))
	cat(i)
}

#Extract sequences with 24 nt
dat <- list()
reads2 <- list()
for(i in c(1:12)){
reads2[[i]] <- reads[[i]][nchar(as.character(reads[[i]][,2]))>23,]
}

#Extract only sequences whose RPM is greater than or equal to sleshhold in any library
hid <- list()
for(i in 1:length(names)){
hid[[i]] <- as.character(reads2[[i]][reads2[[i]][,1]/sum(reads2[[i]][,1])*1000000 > sleshhold,2])
}
tag <- unlist(hid)
BBB <- DNAStringSet(unique(tag))
names(BBB) <- paste0(header,1:length(BBB))

#Export a temporary fasta file
writeXStringSet(BBB,out_f, format="fasta", width=50)




############
#Bowtie against genomme to get up to 45 bases by extending "mouse_ZM_piRNAlist.fas"
############
bowtie-build -f GCF_000001635.25_GRCm38.p5_genomic.fna mouse_genome
( bowtie --offrate 3 -p 10 -a --best --strata -v 0  -t --sam mouse_genome -f mouse_ZM_piRNAlist.fas  > mouse_ZM_piRNAlist_mouse_genome.sam )  
samtools view -@ 10 -bS mouse_ZM_piRNAlist_mouse_genome.sam > mouse_ZM_piRNAlist_mouse_genome.bam
bamToBed -i mouse_ZM_piRNAlist_mouse_genome.bam > mouse_ZM_piRNAlist_mouse_genome.bed

############
#Create a table for each chromosome length
############
#this script is written in R
in_f1 <- "GCF_000001635.25_GRCm38.p5_genomic.fna"
out_f <- "mouse_genome_Info.txt"

#Loading package
library(Biostrings) 

#Loading data
reads1 <- readDNAStringSet(in_f1, format="fasta")
table1 <- cbind(names(reads1),width(reads1))

#Use the first part of a space-separated name

list <- strsplit(table1[,1]," ")
table2 <- table1
for(i in 1:nrow(b)){
	table2[i,1] <- list[[i]][1]
}

#Export data
write.table(table2,out_f,sep="\t",quote=F,row.names=F,col.names=F)


############
#45 nt sequences are obtained by extending 22 nt to the 3'end on genome
############
slopBed -s -i  mouse_ZM_piRNAlist_mouse_genome.bed -g mouse_genome_Info.txt -l 0 -r 22 > mouse_ZM_piRNAlist_extend.bed 
fastaFromBed -name -s -fi GCF_000001635.25_GRCm38.p5_genomic.fna -bed mouse_ZM_piRNAlist_extend.bed  -fo mouse_ZM_piRNAlist_gnome.fas
 
 
############
#For every 24 bases from the 5 'end, no variation is allowed in the subsequent 45 bases
############
#this script is written in R
in_f1 <- "mouse_ZM_piRNAlist_gnome.fas"
out_f <- "mouse_ZM_piRNAshojibase.fas"

#loading packages
library(Biostrings) 

#loading data
reads1 <- readDNAStringSet(in_f1, format="fasta")
NAMlis <- unlist(strsplit(names(reads1),"\\("))[seq(1, length(reads1)*2, by = 2)]

#Investigate whether 45-base sequences are unique for each 5'-side 24-base sequence
names <- unique(NAMlis)
BOX <- rep(F,length(names))
sec <- floor(length(names)/100*(1:100))
for(i in 1:length(names)){
	BOX[i] <- length(unique(as.character(reads1[NAMlis == names[i]] ))) == 1
	if(is.element(i,sec)){
		cat("=")
	}
}

#Number of 24-base sequences with unique 45-base sequences
##This number is the same as the number of piRNA loci, so if this number is not what you intended, start over by extracting 24 nt using sleshhold
sum(is.element(NAMlis,names[BOX]))

#Export data
reads2 <- unique(reads1[is.element(NAMlis,names[BOX]),])
names(reads2) <- names[BOX]
writeXStringSet(reads2, file=out_f, format="fasta", width=50)


############
#Map piRNA to piRNA loci fasta file
############
bowtie-build -f mouse_ZM_piRNAshojibase.fas MMshojibaseZM

NN="SRR7760309 SRR7760310 SRR7760317 SRR7760318 SRR7760321 SRR7760322 SRR7760343 SRR7760344 SRR7760347 SRR7760348 SRR7760369 SRR7760370 SRR7760373 SRR7760374 SRR7760377 SRR7760378"
for N in  ${NN}; do
	echo $N
	( bowtie --offrate 3 -p 10 -a --best --strata -v 3  -t --sam MMshojibaseZM -f ${N}_trim.fasta  > ${N}_MMshojibaseZM.sam )  
	samtools view -@ 10 -bS ${N}_MMshojibaseZM.sam > ${N}_MMshojibaseZM.bam
bamToBed -i ${N}_MMshojibaseZM.bam > ${N}_MMshojibaseZM.bed
done

#################
#From the obtained mapping result, only the read that starts from "0" and the direction is + is extracted.
#################
NN="SRR7760309 SRR7760310 SRR7760317 SRR7760318 SRR7760321 SRR7760322 SRR7760343 SRR7760344 SRR7760347 SRR7760348 SRR7760369 SRR7760370 SRR7760373 SRR7760374 SRR7760377 SRR7760378"
for N in  ${NN}; do
	echo $N
	Rscript --slave --vanilla  0start_+2.R $N
done
